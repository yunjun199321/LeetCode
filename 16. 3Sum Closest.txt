// O(n^2) 
class Solution {
    public int threeSumClosest(int[] nums, int target) {
        int distance = Integer.MAX_VALUE;
        int closest_value = 0;
        Arrays.sort(nums);
        
        for(int i = 0; i < nums.length - 2; i++){
            if(i == 0 || (i > 0 && nums[i] != nums[i - 1])){
                int low_index = i + 1;
                int high_index = nums.length - 1;
                
                while(low_index < high_index){
                    int sum = nums[low_index] + nums[high_index] + nums[i];
                    int current_distance = Math.abs(target - sum);
                    if(current_distance < distance){
                        distance = current_distance;
                        closest_value = sum;
                    }
                    
                    if(sum == target){
                        return target;
                    } else if(sum > target) {
                        high_index--;
                    } else if(sum < target){
                        low_index++;
                    }
                }
            }
        }
        return closest_value;
    }
}